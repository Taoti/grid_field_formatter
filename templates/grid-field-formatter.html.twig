{#
/**
 * @file
 * Default theme implementation for a Grid Field Formatter field.
 *
 * To override output, copy the "grid-field-formatter.html.twig" from the
 * templates directory to your theme's directory and customize it, just like
 * customizing other Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - grid-field-formatter--node--field-foo--article.html.twig
 * - grid-field-formatter--node--field-foo.html.twig
 * - grid-field-formatter--node--article.html.twig
 * - grid-field-formatter--field-foo.html.twig
 * - grid-field-formatter--text-with-summary.html.twig
 * - grid-field-formatter.html.twig
 *
 * Available variables are the ones from field.html.twig:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * Added with specific ones from Grid Field Formatter:
 * - columns: the number of columns of the grid.
 * - row_attributes: attributes for the row.
 * - column_layout number: based on the bootstrap 12 layout grid system, the
 * number of columns size for a single item.
 *
 * @see template_preprocess_grid_field_formatter()
 * @see template_preprocess_field()
 *
 * @ingroup themeable
 */
#}

{%
  set title_classes = [
    'field__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}

{%
  set classes = [
    'container-fluid',
    'field',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
  ]
%}

{%
  set row_classes = [
    'field__items',
  ]
%}

{%
  set column_classes = [
    'col-sm-' ~ column_layout,
    'field__item',
  ]
%}

<div{{ attributes.addClass(classes) }}>
  {% if not label_hidden %}
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
  {% endif %}

  {% for row in items|batch(columns) %}
    <div{{ row_attributes.addClass(row_classes) }}>
      {% for item in row %}
        <div{{ item.attributes.addClass(column_classes) }}>{{ item.content }}</div>
      {% endfor %}
    </div>
  {% endfor %}
</div>