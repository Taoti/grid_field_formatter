{#
/**
 * @file
 * Default theme implementation for a Grid Field Formatter field.
 *
 * To override output, copy the "grid-field-formatter.html.twig" from the
 * templates directory to your theme's directory and customize it, just like
 * customizing other Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - grid-field-formatter--node--field-foo--article.html.twig
 * - grid-field-formatter--node--field-foo.html.twig
 * - grid-field-formatter--node--article.html.twig
 * - grid-field-formatter--field-foo.html.twig
 * - grid-field-formatter--text-with-summary.html.twig
 * - grid-field-formatter.html.twig
 *
 * Available variables are the ones from field.html.twig:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * Added with specific ones from Grid Field Formatter:
 * - columns: the number of columns of the grid.
 *
 * @see template_preprocess_grid_field_formatter()
 * @see template_preprocess_field()
 *
 * @ingroup themeable
 */
#}

{% if label_hidden %}
    {% if multiple %}
        <div{{ attributes }}>
            {% for item in items %}
                <div{{ item.attributes }}>{{ item.content }}</div>
            {% endfor %}
        </div>
    {% else %}
        {% for item in items %}
            <div{{ attributes }}>{{ item.content }}</div>
        {% endfor %}
    {% endif %}
{% else %}
    <div{{ attributes }}>
        <div{{ title_attributes }}>{{ label }}</div>
        {% if multiple %}
        <div>
            {% endif %}
            {% for item in items %}
                <div{{ item.attributes }}>{{ item.content }}</div>
            {% endfor %}
            {% if multiple %}
        </div>
        {% endif %}
    </div>
{% endif %}
